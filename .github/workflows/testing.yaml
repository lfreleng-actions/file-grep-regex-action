---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: "Test GitHub Action 🧪"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions: {}

jobs:
  ### Test the GitHub Action in this Repository ###
  tests:
    name: "Action Testing"
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 4
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Perform setup prior to running test(s)
      - name: "Checkout sample project repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: "lfreleng-actions/test-python-project"
          path: "test-python-project"

      - name: "Extract project name from pyproject.toml"
        id: test-grep
        uses: ./
        with:
          flags: "-oP -m1"
          regex: '(?<=^name = ")([^"]*)'
          filename: "test-python-project/pyproject.toml"

      - name: 'Check for [tool.coverage.run] in pyproject.toml'
        uses: ./
        id: cov-run
        with:
          flags: '-q -E'
          regex: '^\[tool.coverage.run\]\$'
          filename: "test-python-project/pyproject.toml"
          no_fail: 'true'

      - name: 'Invalid path [input: no_fail]'
        uses: ./
        id: no_fail
        with:
          flags: '-q -E'
          regex: '^\[tool.coverage.run\]\$'
          filename: "invalid.txt"
          no_fail: 'true'

      - name: 'Invalid path [Fail]'
        uses: ./
        id: failure
        continue-on-error: true
        with:
          flags: '-q -E'
          regex: '^\[tool.coverage.run\]\$'
          filename: "invalid.txt"

      # Failure testing is also important
      - name: "Error if step above did NOT fail"
        if: steps.failure.outcome == 'success'
        shell: bash
        run: |
          # Error if step above did NOT fail
          echo "Error: previous test step did NOT fail ❌"
          exit 1

      - name: "Validate action output: ${{ github.repository }}"
        shell: bash
        run: |
          # Validate Action Output
          if [ "${{ steps.test-grep.outputs.extracted_string }}" \
            != "lfreleng-test-python-project" ]; then
            echo "Unexpected return value for: test-python-project ❌"
            echo "Returned: ${{ steps.test-grep.outputs.extracted_string }}"
            echo "Expected: lfreleng-test-python-project"
            echo "Test failed ❌"
            exit 1
          else
            echo "Test passed ✅"
          fi
